on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      config_file:
        required: true
        type: string
      deploy_version:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1
      with:
        # The version of Terraform CLI to install. Defaults to `latest`.
        terraform_version: "> 1.1.0"

    - name: Validate and plan deployment Terraform
      id: terraform-plan-validate
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        TF_VAR_deploy_version: ${{ inputs.deploy_version }}
        TF_VAR_vpc_id: ${{ secrets.DEPLOY_VPC_ID }}
        TF_VAR_application_debug_mode: "false"

        TF_VAR_logger_level: "info"
      run: |
        cd tf/site/
        terraform init -backend-config ${{ inputs.config_file }}
        terraform validate
        terraform plan -no-color -out plan.tfplan

    - name: Deploy Terraform
      id: terraform-apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: cd tf/site/ && terraform apply plan.tfplan
