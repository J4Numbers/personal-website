name: NodeJS build and test

on: push

env:
  default_node_version: 14.x

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.default_node_version }}

    - name: Build
      run: |
        npm install
        npm run build

    - name: Upload public build artefacts
      uses: actions/upload-artifact@v2.3.1
      with:
        # Artifact name
        name: npm-gulp-build-files-public
        # A file, directory or wildcard pattern that describes what to upload
        path: public
        # The desired behavior if no files are found using the provided path.
        if-no-files-found: error
        retention-days: 1
    - name: Upload TS build artefacts
      uses: actions/upload-artifact@v2.3.1
      with:
        # Artifact name
        name: npm-gulp-build-files-ts
        # A file, directory or wildcard pattern that describes what to upload
        path: src/js
        # The desired behavior if no files are found using the provided path.
        if-no-files-found: error
        retention-days: 1

  lint:
    runs-on: ubuntu-latest

    needs: build
    continue-on-error: true

    steps:
    - uses: actions/checkout@v2

    - name: Download public build artefacts
      uses: actions/download-artifact@v2.1.0
      with:
        # Artifact name
        name: npm-gulp-build-files-public
        # Destination path
        path: public
    - name: Download TS build artefacts
      uses: actions/download-artifact@v2.1.0
      with:
        # Artifact name
        name: npm-gulp-build-files-ts
        # Destination path
        path: src/js

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.default_node_version }}

    - name: Perform lint checks
      run: |
        npm i
        npm run quality:eslint

  test:
    runs-on: ubuntu-latest

    needs: build

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
    - uses: actions/checkout@v2

    - name: Download public build artefacts
      uses: actions/download-artifact@v2.1.0
      with:
        # Artifact name
        name: npm-gulp-build-files-public
        # Destination path
        path: public
    - name: Download TS build artefacts
      uses: actions/download-artifact@v2.1.0
      with:
        # Artifact name
        name: npm-gulp-build-files-ts
        # Destination path
        path: src/js

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Perform tests
      run: |
        npm i
        npm run generate-certs
        npm run test:unit

  deploy-ecr:
    if: github.ref_name == 'main'
    needs:
    - test
    uses: j4numbers/common-workflows/.github/workflows/build-ecr-aws.yml@main
    with:
      env: production
      repo_name: j4numbers/personal-website
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}

  deploy-terraform:
    if: github.ref_name == 'main'
    needs:
    - deploy-ecr
    uses: ./.github/workflows/aws.yml
    with:
      env: production
      deploy_version: ${{ github.sha }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
